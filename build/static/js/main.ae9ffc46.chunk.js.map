{"version":3,"sources":["services/notes.js","App.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","put","delete","Notification","message","classType","className","Note","person","name","number","Filter","filter","handleFilterChange","value","onChange","Button","handleClick","text","onClick","Persons","persons","setPersons","setErrorMessage","setSuccessMessage","undefined","toLowerCase","includes","map","window","confirm","noteService","then","response","unit","setTimeout","catch","error","RemovePerson","PersonForm","onSubmit","handleNameChange","handleNumberChange","type","App","useState","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","errorMessage","successMessage","useEffect","data","event","target","preventDefault","personObject","oldPerson","find","changedPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae9ffc46.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nconst remove = id => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\nimport noteService from './services/notes'\nimport './index.css'\n\nconst Notification = ({ message, classType }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={classType}>\n      {message}\n    </div>\n  )\n}\n\nconst Note = ( {person} ) => { \n  return (\n    person.name + ' ' + person.number\n  )}\n\nconst Filter = ( {filter, handleFilterChange} ) => {\n  return (\n    <div>\n        <form>\n          <p> filter shown with  \n            <input value={filter} \n            onChange={handleFilterChange} />\n          </p>\n        </form>\n      </div>\n  )\n\n}\n\nconst Button = ( {handleClick, text} ) => {\n  return (\n    <button onClick={handleClick}>\n    {text}\n    </button>\n  )\n}\n\nconst RemovePerson = ({person, setPersons, persons, setErrorMessage, setSuccessMessage}) => {\n  if(window.confirm(`Do you really want to delete ${person.name}?`)) {\n  return (\n  noteService\n  .remove(person.id)\n  .then(response => {\n      setPersons(persons.filter(unit => unit.id !== person.id))\n\n  setSuccessMessage(\n    `Person ${person.name} removed succesfully`\n  )\n  setTimeout(() => {\n    setSuccessMessage(null)\n  }, 3000)\n  })\n    \n  .catch(error => {\n    setErrorMessage(\n      `Note '${person.name}' was already removed from server`\n    )\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 5000)\n  })\n  )}\n} \n\nconst Persons = ( {persons, filter, setPersons, setErrorMessage, setSuccessMessage} ) => {\n    return(\n      <ul>\n      {(filter===undefined) \n      ? persons \n      : persons.filter(person => person.name \n        .toLowerCase()\n        .includes(filter.toLowerCase())\n      ).map(person => \n        <li key={person.name}>\n          <Note person={person} />\n          <Button text=\"delete\" handleClick={() => RemovePerson({person, setPersons, persons, setErrorMessage, setSuccessMessage})} />\n        </li>\n        )}\n      </ul>\n      )}\n\nconst PersonForm = ( {onSubmit, handleNameChange, handleNumberChange, name, number} ) => {\n  return (\n  <form onSubmit={onSubmit}>\n  <div>\n    name: <input \n    value={name}\n    onChange={handleNameChange} />\n  </div>\n  <div>\n  number: <input \n    value={number}\n    onChange={handleNumberChange} />\n    </div>\n  <div>\n    <button type=\"submit\">add</button>\n  </div>\n  </form>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons] = useState([\n    { name: 'Arto Hellas', \n      number: '045135133'\n    }\n  ]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter] = useState('')\n  const [ errorMessage, setErrorMessage] = useState(null)\n  const [ successMessage, setSuccessMessage] = useState(null)\n\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(response => {\n        setPersons(response.data)\n      })\n  }, [])\n\nconst handleNameChange = (event) => {\n  setNewName(event.target.value)\n}\nconst handleNumberChange = (event) => {\n  setNewNumber(event.target.value)\n}\nconst handleFilterChange = (event) => {\n  setNewFilter(event.target.value)\n}\n\nconst nameTaken = () => {\n  return(\n    persons.map(person => person.name).includes(newName)\n  )\n}\n\nconst addPerson = (event) => {\n  event.preventDefault()\n  \n  const personObject = {\n    name: newName,\n    number: newNumber\n  }\n  if(nameTaken()) {\n    if(window.confirm(\n      `${newName} is already added to the phonebook. Replace the old number with new one?`)) {\n        \n        const oldPerson = persons.find(person => person.name===newName)\n        const changedPerson = { ...oldPerson, number: personObject.number}\n\n        noteService\n        .update(oldPerson.id, changedPerson)\n        .then(response => {\n          setPersons(persons.map(person => person.name !== newName ? person : response.data))\n          setNewName('')\n          setNewNumber('')\n          setSuccessMessage(\n            `Person ${personObject.name} updated!`\n         )\n          setTimeout(() => {\n            setSuccessMessage(null)\n          }, 3000)  \n        })\n        .catch(error => {\n          setErrorMessage(\n            `Person '${personObject.name}' has already been removed from server`\n          )\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n        })\n    }\n  } else {\n    noteService\n    .create(personObject)\n    .then(response => {\n      setPersons(persons.concat(response.data))\n      setNewName('')\n      setNewNumber('')\n    })\n    setSuccessMessage(\n      `Person ${personObject.name} added!`\n    )\n    setTimeout(() => {\n      setSuccessMessage(null)\n    }, 3000)\n  }\n}\n\n  return (\n    <div>\n      <Notification message={errorMessage} classType=\"error\" />\n      <Notification message={successMessage} classType=\"success\" />\n      <h2>Phonebook</h2>\n      <Filter filter={newFilter} handleFilterChange={handleFilterChange} />\n      \n      <h2>add a new </h2>\n      <PersonForm onSubmit={addPerson} handleNameChange={handleNameChange}\n       handleNumberChange={handleNumberChange} name={newName} number={newNumber} />\n     \n      <h2>Numbers</h2>\n      <Persons persons={persons} filter={newFilter} setPersons={setPersons} setErrorMessage={setErrorMessage} setSuccessMessage={setSuccessMessage} />\n\n    </div>\n  )\n\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}